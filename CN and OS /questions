
---

## **1. OSI & TCP/IP Model**
- Layers, functions, and purpose of each.
- Protocols at each layer (HTTP, TCP, UDP, IP, etc.).

## **2. Network Protocols**
- **TCP vs UDP:** Differences, use cases, connection setup (3-way handshake), reliability, flow control, congestion control.
- **HTTP/HTTPS:** How it works, statelessness, persistent connections, REST principles.
- **DNS:** What is DNS, how name resolution works.
- **DHCP:** What it does, how IP addresses are assigned.

## **3. IP Addressing & Routing**
- IPv4 vs IPv6 basics.
- Subnetting, CIDR notation.
- Default gateway, routing basics.

## **4. Socket Programming Basics**
- High-level understanding of how client-server communication works.
- How Java applications connect to services over a network.

## **5. Network Troubleshooting**
- Ping, traceroute, netstat, telnet.
- Recognizing where failures can occur (client, network, server).

## **6. Firewalls, NAT, and Proxies**
- What is a firewall? Purpose and basic rules.
- How NAT works (private vs public IPs).
- Forward and reverse proxies.

## **7. Load Balancing & Scalability**
- What is load balancing? Why is it needed?
- Layer 4 (TCP) vs Layer 7 (HTTP) load balancers.

## **8. Common Network Attacks & Security**
- Man-in-the-middle, DDoS, spoofing.
- Importance of HTTPS and SSL/TLS.

## **9. Content Delivery Networks (CDNs)**
- What is a CDN and how it helps with scalability and performance.

---

### **Sample Questions Amazon Might Ask**

- Explain the OSI model and what happens when you type a URL in your browser.
- Difference between TCP and UDP. Where would you use one over the other?
- How does DNS work? What happens if DNS fails?
- How does load balancing work?
- How would you troubleshoot a slow network connection in a distributed system?
- What is the difference between a process and a thread, and how do they communicate over a network?

1. Whatâ€™s the difference between a process and a thread?
2. How does virtual memory work?
3. Explain how LRU page replacement algorithm works.
4. Describe how deadlock occurs. How can it be prevented?
5. Explain how Round Robin scheduling works and its tradeoffs.
6. How do two processes communicate in Linux?
7. How does the OS know which process to schedule next?

