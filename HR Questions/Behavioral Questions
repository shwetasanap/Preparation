1. Describe a situation where you had to work with a difficult team member. What was the outcome?
-->
In a previous project, I worked with a team member who often missed deadlines and seemed unresponsive to feedback. 
This affected our team’s progress and morale. I decided to approach the situation empathetically and set up a one-on-one conversation
to understand if there were any underlying issues. During our discussion, I learned that they were struggling with some of the technical
aspects of the project and felt uncomfortable asking for help.

I offered to support them by reviewing certain tasks together and encouraged them to communicate more openly with the team. 
Over time, their performance improved and they became more engaged. As a result, our team collaboration strengthened and we were 
able to complete the project successfully. The experience taught me the importance of communication, empathy, and proactive
problem-solving when working with diverse personalities.


2.Give an example of a goal you set and how you achieved it.
-->
I wanted to improve my time management skills at work. To do this, I started creating a daily to-do list with my top priorities.
I made sure to check off each task as I completed it. After a few weeks, I noticed I was able to finish my work on time and felt 
less stressed. This small change really helped me become more organized and productive.


3.Have you ever made a mistake on a project? How did you address it?
-->
Yes, I have made mistakes in projects before. For example, I once misunderstood part of a client’s requirements and worked on the
wrong feature. As soon as I realized the mistake, I informed my manager and the team. I took responsibility and quickly corrected 
the issue by updating the feature to match the client’s needs. I also double-checked requirements with the client going forward 
to make sure it didn’t happen again. The project was delivered on time, and I learned the importance of clear communication and
asking questions when things aren’t clear.

4.Tell me about a time you had to quickly adapt to a major change at work.
-->
We had a sudden requirement to add security to our Spring Boot application using Spring Security. 
I had never used Spring Security before, so I quickly read the documentation and watched a few tutorials.
I tried out different configurations in a test project and, with some help from my teammates, was able to 
set up authentication and authorization in our application within a few days. This experience helped me become 
comfortable with learning new Spring Boot modules under tight deadlines.


5.How do you prioritize your tasks when you have multiple deadlines?
-->
When I have multiple deadlines, I start by making a list of all my tasks and their due dates.
I rank them by urgency and importance, and focus on the highest-priority tasks first. 
I also break down big tasks into smaller steps and set mini-deadlines for myself to stay on track. 
If needed, I communicate with my team or manager to make sure I’m focusing on the right priorities.

6.Give an example of how you handled receiving constructive criticism
-->
When I received constructive criticism about my coding style, I took it positively and reviewed the feedback. 
I asked for specific examples and made changes to my code. As a result, my code became cleaner and easier for my team to read.

7.Tell me about a project where you took the initiative. What did you do and what was the result?
-->

On a previous team, I noticed our project documentation was outdated and causing confusion for new members.
I took the initiative to update all the documentation, including setting up a new onboarding guide.
I coordinated with teammates to make sure the information was accurate.
As a result, new team members were able to get up to speed much faster and team productivity improved.

8.Describe a time when you went above and beyond your job responsibilities.
-->
In my previous role, a teammate unexpectedly went on leave right before a big project deadline.
Although it wasn’t part of my core responsibilities, I volunteered to take on their tasks in addition to my own. 
I worked extra hours to ensure both sets of work were completed on time, and the project was delivered successfully.
My manager appreciated my dedication and teamwork.


While working as a developer, I noticed frequent bugs in our deployment process that weren’t officially my responsibility to fix.
I took the initiative to investigate, documented the issues, and created a set of scripts to automate deployment checks.
This reduced errors and improved our release process, earning positive feedback from both the development and operations teams.

9.Strength/Weakness
-->
"My strengths are attention to detail, taking ownership, and quick learning. I ensure code quality and am proactive about resolving issues.
A weakness I’ve been working on is overthinking solutions initially — 
I now involve others early through design discussions to balance perfection with practicality."

**Strengths:**
- Quick learner
- Strong problem-solving skills
- Effective communicator
- Team player
- Detail-oriented
- Adaptable to change

**Weaknesses:**
- Sometimes overly critical of my own work
- Can be a perfectionist
- Tendency to take on too many tasks at once
- Public speaking nerves (but improving)
- Delegating tasks can be challenging

**Strength**

**Strength:** Adaptability  
**Explanation:** I am able to adjust quickly to new situations, technologies, and changes in the workplace.  
**Example:**  
_In my previous job, our team had to switch to a new project management tool on short notice.
I took the initiative to learn the tool, attended online tutorials, and then helped train my teammates. 
Because of my quick adaptation, our team was able to continue working efficiently without missing any deadlines._

---

**Weakness**

**Weakness:** Tendency to be a perfectionist  
**Explanation:** I sometimes spend too much time making sure my work is perfect, which can slow down my productivity.  
**Example:**  
_When preparing client presentations, I used to double-check everything multiple times to ensure there were no errors.
While this led to high-quality work, it also meant I sometimes missed tight deadlines.
I’ve since learned to balance quality with efficiency by setting time limits for myself and trusting my initial work more._



10. Why are good fit for the role
-->

I believe I am a strong fit for this role because I have the required technical skills and experience, 
as well as a passion for this industry. My background in IT, combined with my experience in
java/springboot, has given me a solid foundation to contribute effectively. 
I am also a quick learner and adaptable, which allows me to adjust to new environments and challenges smoothly. 
And I am confident that my proactive attitude and strong work ethic will help me add value to your organization.

11.why this company
-->
I want to join Morgan Stanley because it is a globally recognized leader in financial services,
known for its culture of innovation, integrity, and commitment to professional development.
I am impressed by the company’s focus on fostering diversity and collaboration, as well as its reputation 
for driving impactful solutions in the financial industry. I believe that working at Morgan Stanley will 
provide me with the opportunity to learn from talented colleagues, contribute to challenging projects,
and grow my career in a dynamic and supportive environment. I am excited by the prospect of being part 
of a team that is shaping the future of finance.

12. Handle stress and pressure?
-->
“I prioritize tasks, break them into smaller steps, and focus on one thing at a time.
I also make sure to take short breaks to maintain my productivity.
In my internship, I managed tight deadlines by staying organized and communicating early when I needed help.”

13.Describe a challenge you faced and how you overcame it.
-->
Tell about spring security implementations.

14.salary
-->

Based on my current offer of ₹18 LPA, and considering my skills and experience, I am looking for a compensation in 
the range of ₹24 LPA. I am also open to understanding the full benefits package and am flexible if the overall 
opportunity aligns with my career goals.”

15. Daily routine
-->

“Typically, I start my day by checking my emails and reviewing any updates or tasks assigned in our project management 
tool (like JIRA/Trello). I prioritize my tasks for the day, often starting with ongoing development work or data analysis.

I spend a significant portion of my day writing and reviewing code, debugging issues, or working on enhancements. 
We usually have a daily stand-up meeting where I update the team about my progress and discuss any blockers.

In the afternoons, I often collaborate with my teammates or attend meetings to discuss requirements, design solutions, or review code. 
I also document my work and ensure that my code is well-tested before pushing it to the repository.

Apart from technical work, I assist team members if they face issues and contribute to knowledge sharing sessions.
I make sure to stay updated with new tools and technologies relevant to our work.”


16. Relocation
-->
“Thank you for offering me the opportunity at the Bangalore location. Since this will be my first time relocating,
I wanted to check if the company has any relocation policy or support in place. 
Also, I might need a little extra time to make the move and settle in, 
so I was wondering if there's any flexibility with the joining date based on the relocation.”



### 🗣 **General Questions**

**1. How do you rate your communication skills? Can you give examples?**
*"I would rate my communication skills as strong. Over the last 3 years, I’ve worked closely with cross-functional teams — product, QA, 
and backend — where I had to clearly communicate technical updates, blockers, and ideas.
For example, I regularly update stakeholders during sprint meetings and also mentor junior developers."*

**2. Tell me about a time when you had to explain something complex to someone. How did you do it?**
*"In my current project, I had to explain a microservice deployment process to a new team member.
I broke it down into steps — code structure, CI/CD pipeline, environment setup — and also created a simple flowchart. 
They appreciated how easily they could understand and replicate the process."*

**3. How do you make sure your message is understood clearly?**
*"I tailor my message based on the audience. With technical teams, I go into detail. With non-tech stakeholders, I simplify the language.
I always summarize key points, use visuals when needed, and ask for feedback to confirm clarity."*

**4. Can you describe a situation where there was a misunderstanding? How did you resolve it?**
*"Once, during a sprint, QA misunderstood a user story due to how it was written in Jira. 
I clarified the functionality during a quick call and updated the story description with examples.
It helped prevent confusion for the rest of the team as well."*

**5. How do you handle feedback – both giving and receiving it?**
*"I take feedback positively and see it as a way to improve. For example, during a code review, a senior pointed out areas for better error handling.
I implemented the suggestions and improved my future submissions. When I give feedback, especially in code reviews, 
I focus on logic and best practices, and always stay respectful."*

---

### 👥 **Team or Work Scenarios**

**6. Have you ever worked with a difficult team member? How did you communicate with them?**
*"Yes, I worked with a colleague who often missed deadlines and didn’t communicate much.
I initiated a one-on-one discussion to understand the issue. It turned out they were overwhelmed with personal tasks. 
I suggested they speak with our lead about bandwidth, and things improved afterward."*

**7. How do you handle communication in a team where members have different communication styles?**
*"In my current team, some members prefer Slack messages while others like scheduled calls. 
I adapt based on the person and situation. I also maintain clear documentation so that everyone, regardless of their style, stays aligned on the project status."*

**8. Have you ever had to communicate with a client or manager who was not happy? What did you do?**
*"Yes, once a client raised concerns about a feature taking too long. I calmly explained the reasons — mainly third-party integration delays 
— and presented a revised timeline. I also offered a temporary workaround to maintain progress. This approach helped rebuild trust."*

---

### 📧 **Written & Verbal Communication**

**9. Are you comfortable writing professional emails or reports?**
*"Absolutely. I regularly write update emails, technical documentation, and post-mortem reports.
I make sure they are concise, structured, and easy to follow — especially when addressing non-technical stakeholders."*

**10. How do you prepare for a presentation or a meeting?**
*"I list down key discussion points, prepare slides or a demo if needed, and rehearse briefly.
I also anticipate possible questions. For client or sprint meetings, I ensure I’m up-to-date with progress and blockers."*

**11. How do you ensure effective communication in remote or virtual settings?**
*"I follow clear communication practices — regular stand-ups, status updates on Jira or Slack,
and async updates when needed. I also make sure to actively listen, repeat key takeaways, and confirm decisions post-call via chat or email."*


**12. Describe a time when you had to listen carefully to understand someone’s point of view.**
*"In a sprint planning meeting, our tester raised concerns about test coverage for a feature I thought was stable.
I listened carefully, and they pointed out edge cases I hadn't considered. I updated the code accordingly, which helped avoid a potential bug in production."*


“Thank you for the opportunity and the offer for the Bangalore location. I wanted to check if there is any possibility to be considered for the Mumbai location
instead?
I’m open to both but Mumbai would be preferable if possible.”













